     Глава 3. АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ НАД ЧИСЛАМИ С ПЛАВАЮЩЕЙ
                               ТОЧКОЙ


   Эффективность Форта особенно заметна при работе  с  целыми  числами
(задачи управления,  логические, поисковые и др.), но время от времени
возникают ситуации,  когда без операций с  плавающей  точкой  обойтись
нельзя.  Тогда на помощь программисту приходят библиотеки,  специально
созданные для этих целей.  Эти библиотеки предназначены для конкретной
ЭВМ  (это  может быть связано,  например,  с наличием сопроцессора для
работы с плавающей точкой).  Можно создать и универсальную библиотеку,
в  которой  не используются специальные команды,  но ее быстродействие
будет не слишком высоким.  Практически в любом случае такая библиотека
должна   использовать  Форт-ассемблер,  а  интерпретатор  должен  быть
способен воспринимать числа,  записанные в соответствующем формате.  В
некоторых  вариантах это требует переделки оператора NUMBER.  Поэтому,
если вы берете библиотеку для работы с  плавающей  точкой,  убедитесь,
что она совместима с возможностями вашей версии интерпретатора.

   Ниже описана  библиотека,  которая  работает  с числами с плавающей
точкой.  Перед  работой  с  этой  библиотекой   необходимо   загрузить
Форт-ассемблер.  Преобразование  осуществляется  с  учетом действующей
системы счисления,  а результат  укладывается  в  две  верхние  ячейки
стека.  После  преобразования  в  "плавающую"  форму  на  верху  стека
окажется код, соответствующий знаку, порядку и старшей части мантиссы.
Оператор NUMBER использует не более 10 введенных цифр,  ограничения на
порядок идентичны  существующим  для  ЭВМ  серии  СМ,  МС1212  и  т.д.
Преобразование   из   формата   NUMBER  в  "плавающий"  осуществляется
оператором FL.  Формат обращения: +-XXXXX.XXXXE+-YY FL, в результате в
двух  верхних  ячейках  стека окажутся два кода,  представляющие собой
число с плавающей точкой.

   Для представления чисел с плавающей точкой на экране  (или  печати)
можно  использовать  оператор  FTY  (F.) (см.  приложение 2),  который
печатает число в виде (-).  XXXXXXXE+-YY, где (-) означает, что вместо
знака   "+"   вводится   пробел,   например:  .3141592E1,  -.1250000E0
.3000000Е-7. Число цифр после "." постоянно и равно 7. Как само число,
так  и его порядок являются десятичными вне зависимости от действующей
системы счисления.  Данная версия работает с форматом чисел,  где 15-й
разряд первого числа представляет собой знак, 7- 14 - порядок числа, а
0-6 - старшую часть мантиссы,  второе число - младшая часть  мантиссы.
Этот формат накладывает ограничения на диапазон чисел и их точность.

   Для реализации   "плавающих"   операций   в  интерпретатор  введены
операторы MUL и DIV,  которые работают с целыми делимыми и множителями
двойной  длины.  Делитель  и  второй множитель - целые числа одинарной
длины,  а результат всегда целое число  двойной  длины.  Оператор  DIV
производит  округление  и уточняет младший бит частного.  MUL и DIV не
являются примитивами Форта, они описаны как стандартные слова:

      : DIV >R R M/MOD ROT R> 2/ > ( остаток больше половины
                                     делителя ? )
            IF 1 0 D+ ( округление) THEN ;

      : MUL DUP ROT * >R U* R> + ;

   На примере этих описаний видно,  что,  если потребуются действия  с
числами  учетверенной длины,  их можно будет реализовать исключительно
средствами Форта.



           З.1. ПРЕОБРАЗОВАНИЯ ЧИСЕЛ С ПЛАВАЮЩЕЙ ТОЧКОЙ


   Преобразование чисел  из исходного (входного) формата в "плавающий"
производится следующим образом:

                        ┌─-n──┐
                    A0     A1   EX
                  XXXXX.XXXXXE+-YY

   Точка может отсутствовать,  но при этом не должно  вводиться  более
пяти  цифр.  Знак  после  E  (знак порядка) также может отсутствовать,
тогда порядок считается  положительным.  Оператор  NUMBER  преобразует
входное  представление  в  число  двойной  длины.  При этом десятичное
значение порядка  YY  будет  присвоено  системной  переменной  $EX,  а
положение десятичной точки задается переменной DPL (см. приложение 8).
Так, число OCTAL 11111. 22222E6 будет преобразовано в 4444 и 122222, а
DECIMAL 11111.22222E6 - в восьмеричные 41072 и 60456,  первое из чисел
- на верху стека.  В обоих примерах значения переменных $EX=6 и DPL=5.
Сначала  производится  преобразование к виду .A0A1 *BASE^EX,  где EX -
порядок числа,  а A0A1 - целое число двойной длины (во втором  примере
это .1111122222x10^11).

   Если BASE=10 (десятичная система счисления),  .A0A1 последовательно
умножается на 5 и делится на 4, после чего производится нормализация -
изменение  значения порядка и сдвиг числа,  если это требуется.  Число
таких операций равно целому от деления (EX-n)/3,  где  n  равно  числу
знаков  после  запятой.  Для  восьмеричной  и шестнадцатиричной систем
алгоритм преобразования существенно проще.  Такая  методика  позволяет
обойтись  только целочисленными операциями с числами двойной длины.  В
результате получаем число с плавающей точкой в представлении ЭВМ  типа
СМ.  Длина  мантиссы  23  разряда.  Сходная  методика  применима и для
обратного  преобразования,   необходимого   для   печати   результатов
расчетов, которые представляются обычно в десятичной системе.

   Исходное представление  числа с плавающей точкой f∙2^e приводится к
виду F∙10E. Так как выходное представление чисел всегда десятичное, то
E приблизительно = е/З. При этом

             INT(e/E)    E   R(e/E)
      F=f  (2        /10)   2

где INT(e/E) - целое от деления е/Е;  R(е/Е) - остаток от деления е/Е.
Для осуществления преобразования умножаем сначала

	    R(e/E)
      f на 2      ,

затем полученный результат Е раз умножаем на

	INT(e/E)
      [2        ]/10.

   Данная схема  позволяет работать с числами двойной длины,  исключая
возможность  переполнения  или  потери   точности   на   промежуточных
операциях.

   Обращение к оператору представления "плавающих" чисел на экране:  A
FTY, где A - имя переменной, подлежащей печати: FTY - оператор печати.
Число  печатается в виде +-XXXXXXXE+-YY.,  знаки числа и порядка могут
отсутствовать.  Число выводимых цифр не более 7,  порядок содержит две
цифры.  Возможно,  вам  более  по  душе формат,  аналогичный F-формату
Фортрана (операция DECIMAL 11111.22222E6 FL FTY  выдаст  .1111122E11).
Используя программу FTY приложения 2 в качестве исходной, вы без труда
напишите соответствующий  оператор  печати.  Операторы  для  работы  с
числами  двойной  длины  с  плавающей  точкой  (64 двоичных разряда) в
данной версии отсутствуют.



         3.2. БИБЛИОТЕКА ОПЕРАТОРОВ ДЛЯ РАБОТЫ С ЧИСЛАМИ

                       С ПЛАВАЮЩЕЙ ТОЧКОЙ


   Библиотека работает  на  ЭВМ,  снабженной процессором с расширенным
набором команд  и  с  возможностью  выполнения  операций  с  плавающей
точкой.   Для   работы   с   этой   библиотекой  необходимо  загрузить
Форт-ассемблер.  Полный текст библиотеки представлен в  приложении  2.
Эти программы могут послужить также примером операторов, написанных на
Форт-ассемблере.  При  необходимости  библиотека  может   быть   легко
расширена в соответствии со стоящими задачами.

   Полный список  операторов  для  работы с числами с плавающей точкой
приведен в табл.18.

   Для описания константы с  плавающей  точкой  используется  оператор
FCON,  а переменной - FVAR. Все операторы для работы с числами двойной
длины в стеке пригодны и для чисел с плавающей  точкой.  В  библиотеку
включены и операторы вычисления элементарных функций. В программе SQRT
(извлечение квадратного  корня)  используется  алгоритм  Герона  [38].
Отличительной  особенностью данной реализации SQRT является то,  что в
случае отрицательного аргумента,  корень извлекается из его  модуля  и
никаких  сообщений  об этом "безобразии" программист не получает.  При
попытке же вычислить 1/X для X = 0 система выдаст сообщение WSC =/= 26
(или  "0  DIVISION",  если  WARNINGS = 1).  TAN (тангенс) реализован с
помощью цепных дробей,  а LN (натуральный логарифм),  SIN (синус), EXP
(показательная  функция)  написаны  по рекуррентным алгоритмам.  Форма
обращения к этим операторам представлена в табл.18.  В приложении 2 вы
найдете  текст  оператора  INT.  который  выделяет целую часть числа с
плавающей точкой,  и F**,  который возводит "плавающее" число в  целую
степень; 2! и 2@, которые являются операторами-аналогами ! и @, но для
чисел двойной длины и с плавающей точкой,  также описаны в рамках этой
библиотеки.  Здесь же определены и некоторые константы, например: 1E0,
2E0,  EE=2.71828183 (основание натурального логарифма), PI=3.1415926 и
некоторые другие.

   Упражнение 1.
   Напишите программу для расчета Arcsin и Arctg.

   Упражнение 2.
   Опишите оператор   для  расчета  своей  любимой  функции,  например
функции Бесселя.
